name: Exiled Main CI

on: [push, pull_request]

jobs:

  build:

    runs-on: windows-latest

    steps:

    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v1.5.0

    - name: Setup Nuget
      uses: warrenbuckley/Setup-Nuget@v1

    - uses: actions/checkout@v2.3.1

    - name: Download 7zip
      uses: carlosperate/download-file-action@v1.0.3
      with:
        file-url: 'https://www.exiled.host/7za.exe'
        file-name: '7zip.exe'

    - name: Download references
      uses: carlosperate/download-file-action@v1.0.3
      with:
        file-url: 'https://www.exiled.host/build_deps/References.zip'
        file-name: 'References.zip'

    - name: Extract Refs
      run: ./7zip.exe e References.zip -oReferences -r -y

    - name: Restore projects
      run: |
        dotnet restore Exiled.API
        dotnet restore Exiled.Bootstrap
        dotnet restore Exiled.Events
        dotnet restore Exiled.Example
        dotnet restore Exiled.Loader
        dotnet restore Exiled.Permissions
        dotnet restore Exiled.Updater

    - name: Build
      env:
        EXILED_REFERENCES: ${{ github.workspace }}/References
        GIT_COMMIT_SHA: ${{ github.sha }}
      shell: pwsh
      run: |
        dotnet build Exiled.API -c release
        if ($? -eq $false) { Exit 1 }
        dotnet build Exiled.Bootstrap -c release
        if ($? -eq $false) { Exit 1 }
        dotnet build Exiled.Events -c release
        if ($? -eq $false) { Exit 1 }
        dotnet build Exiled.Example -c release
        if ($? -eq $false) { Exit 1 }
        dotnet build Exiled.Loader -c release
        if ($? -eq $false) { Exit 1 }
        dotnet build Exiled.Permissions -c release
        if ($? -eq $false) { Exit 1 }
        dotnet build Exiled.Updater -c release
        if ($? -eq $false) { Exit 1 }

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: Build Results
        path: bin/Release

    - name: Generate nuget package
      shell: pwsh
      run: |
        [XML]$TargetsFile = Get-Content Exiled.props
        $Version = $TargetsFile.Project.PropertyGroup.Version
        $Version = $Version[0].Trim()
        $Year = [System.DateTime]::Now.ToString("yyyy")
        Write-Host "Generating for version $Version"
        nuget pack Exiled/Exiled.nuspec -Version $Version -Properties Year=$Year
        Write-Host "::set-env name=PackageFile::Exiled.$Version.nupkg"

    - name: Upload nuget package
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.PackageFile }}
        path: ${{ env.PackageFile }}
